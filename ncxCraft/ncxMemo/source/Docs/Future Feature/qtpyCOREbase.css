import sys

from PyQt5.Qt import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *

#Global vars:
#::::::::::::
#here

#CLASS customWindow(QMainWindow)
#===============================
class CustomWindow(QMainWindow):
    def paintEvent(self, event=None):
        painter = QPainter(self)
        painter.setOpacity(0.1)
        painter.setBrush(Qt.black)
        painter.setPen(QPen(Qt.black))   
        painter.drawRect(self.rect())

    #def hideAllMsgs(self): 
        #global boolAllMsgs, memoMsg, noteMsg
#============================================================ END of CLASS.

#settings variables init
#:::::::::::::::::::::::
hintFrameless = Qt.FramelessWindowHint #fullscreen
hintAlwaysOnTop = Qt.WindowStaysOnTopHint #windowed always on top
customWindowFlag=hintAlwaysOnTop #framed/framless = windowed/fullscreen

solidBackground=Qt.WA_NoSystemBackground
opacityBackground=Qt.WA_TranslucentBackground

#==============
#PROGRAM STARTS
#::::::::::::::
app = QApplication(sys.argv)
# Create the main window
window = CustomWindow()
#framed/framless = windowed/fullscreen
window.setWindowFlags(customWindowFlag)

#SOLID (switch)
window.setAttribute(solidBackground, True)
#opacity (switch)
window.setAttribute(opacityBackground, True)

# Create the Widget (MAIN opacity WINDOW/WIDGET)
mainWidget=QWidget(window)
mainWidget.setGeometry(QRect(0, 0, 555, 555))

# Create the Label (main)
mainLabel = QLabel(mainWidget)
mainLabel.setGeometry(QRect(0, 0, 555, 555))
mainLabel.setAlignment(Qt.AlignTop | Qt.AlignLeft)
mainLabel.setStyleSheet("color:"+"red"+";")
mainLabel.setText("welcome")
mainLabel.setFont(QFont('Comic Sans MS', 22))
mainLabel.move(0, 0)

#===========================================QPlainTextEdit
# Create the copy/past (EFFECT)
#rawTextLabel = QPlainTextEdit(mainWidget)
#rawTextLabel.setGeometry(QRect(0, 0, 500, 500))
#rawTextLabel.setBackgroundVisible(True)
#rawTextLabel.move(leftRightRaw, downUpRaw)
#rawTextLabel.hide()
#=========================================================

# Run the application
window.setGeometry(QRect(0, 0, 555, 555))
window.show()
#window.showFullScreen()

#if conditions (signal/slot)
#:::::::::::::::::::::::::
#window.moveRawTextRight = QShortcut(QKeySequence('alt+6'), window)
#window.moveRawTextRight.activated.connect(window.moveRawRight)

#=================END OF PROGRAM.
#window.switchSolid() #here is a_SOLID_color_BG-BY_DEFAULT to show help as a_VISIBLE_welcome-msg.
#::::::::::::::::::::::::::::::::::::::::::::::::
#keep app opened until exit! (necessary) THE END.
sys.exit(app.exec_())
#################################################
#################################################
#################################################
def button1_clicked():
   print("Button 1 clicked")
:::::::::::::::::::::::::::::::::::::::::::::::::
button1 = QPushButton(mainWidget)
button1.setText("Button1")
button1.move(64,32)
.................................................
button1.clicked.connect(window.button1_clicked)
#################################################



